---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hsojo.
--- DateTime: 2022/11/22 00:03
---

---@class Updatable: Nestable
---@field super Nestable
---@field parent Updatable
---@field children Updatable[]
local Updatable = require('sys.core.base.nestable'):extend()
Updatable.__name = 'Updatable'

function Updatable:new()
  Updatable.super.new(self)
  self.speed = 1
  self.freeze = false
end

function Updatable:setSpeed(speed)
  self.speed = speed
end

function Updatable:setFreeze(freeze)
  self.freeze = freeze
end

function Updatable:start()
  self:setFreeze(false)
  return self
end

function Updatable:pause()
  self:setFreeze(true)
  return self
end

function Updatable:update(dt)
  self:updateChildren(dt)
end

function Updatable:updateChildren(dt)
  for _, child in pairs(self.children) do
    if child:is(Updatable) then
      child:update(dt)
    end
  end
end

function Updatable:updateCall(dt)
  if self.freeze then
    return
  end

  dt = dt * self.speed
  self:update(dt)
end

return Updatable
