---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hsojo.
--- DateTime: 2022/11/11 22:15
---

---@class Key: BaseObject
local Key = require('sys.core.base.object'):extend()
Key.__name = 'Key'
Key._objects = {}
Key._prev_code = nil
Key._last_code = nil

function Key.get(code)
  local object = Key._objects[code]
  if not object then
    object = Key(code)
    Key._objects[code] = object
  end
  return object
end

function Key:new(code)
  self.code = code
  self.is_press = false
  self.is_down = false
  self.is_up = false
  self.prev_down_time = 0
  self.last_down_time = 0
end

function Key:isDown()
  return self.is_down
end

function Key:isUp()
  return self.is_up
end

function Key:isPress()
  return self.is_press
end

function Key:isCombo(interval)
  interval = interval or 0.2
  local combo_interval = self.last_down_time - self.prev_down_time
  return self:isDown() and self.code == Key._prev_code and combo_interval < interval
end

function Key.callback_updated()
  ---@param object Key
  for _, object in pairs(Key._objects) do
    object.is_down = false
    object.is_up = false
  end
end

function Key.callback_pressed(code)
  local key = Key.get(code)
  if not key.is_press then
    Key._prev_code = Key._last_code
    Key._last_code = code

    key.is_down = true
    key.prev_down_time = key.last_down_time
    key.last_down_time = love.timer.getTime()
  end
  key.is_press = true
end

function Key.callback_released(code)
  local key = Key.get(code)
  key.is_press = false
  key.is_up = true
end

return Key
