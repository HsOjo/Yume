---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hsojo.
--- DateTime: 2022/11/11 23:27
---

---@class BaseWidget: BaseObject
local BaseWidget = require('sys.core.object.base'):extend()

function BaseWidget:new()
  BaseWidget.super.new(self)
  self.focus = false
  ---@type table<string, function[]>
  self.events_functions = {}
end

function BaseWidget:setFocus(focus)
  self.focus = focus
  if focus and self.parent:is(BaseWidget) then
    self.parent:setFocus(focus)
  end
end

function BaseWidget:on(event, func)
  if not self.events_functions[event] then
    self.events_functions[event] = {}
  end
  table.insert(self.events_functions[event], func)
end

function BaseWidget:off(event)
  self.events_functions[event] = nil
end

function BaseWidget:emit(event, ...)
  local event_functions = self.events_functions[event]
  if event_functions then
    for _, event_function in pairs(event_functions) do
      event_function(...)
    end
  end
end

function BaseWidget:update()
  ---@param children BaseWidget
  for _, children in pairs(self.childrens) do
    if children:is(BaseWidget) then
      children:update()
    end
  end
end

function BaseWidget:release()
  BaseWidget.super.release(self)
  for event, _ in pairs(self.events_functions) do
    self:off(event)
  end
end

return BaseWidget
