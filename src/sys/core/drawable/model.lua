---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hsojo.
--- DateTime: 2022/12/4 23:16
---

local Animation = require('sys.core.drawable.animation')

---@class Model: Rotatable
local Model = require('sys.core.base.rotatable'):extend()
Model.__name = 'Model'

function Model:new()
  Model.super.new(self)
  self:setFreeze(false)

  ---@type SpriteSet[]
  self.sprite_sets = {}

  ---@type table<string, Animation>
  self.animations = {}

  ---@type Animation
  self.current_animation = nil
end

---@param name string
function Model:newAction(name, loop)
  local animation = Animation(self)
  animation:setLoop(loop or false)

  self.animations[name] = animation
  if not self.current_animation then
    self:doAction(name)
  end

  return animation
end

---@param name string
function Model:doAction(name)
  local animation = self.animations[name]
  if animation then
    self.current_animation = animation
    animation:reset():start()
  end
end

function Model:update(dt)
  Model.super.update(self, dt)
  if self.current_animation then
    self.current_animation:updateCall(dt)
  end
end

function Model:addSpriteSet(...)
  local sprite_sets = { ... }
  for _, sprite_set in pairs(sprite_sets) do
    self:bind(sprite_set)
    table.insert(self.sprite_sets, sprite_set)
  end
end

---@param process fun(sprite_set: SpriteSet, index: number)
function Model:batchSpriteSets(process)
  for index, sprite_set in pairs(self.sprite_sets) do
    process(sprite_set, index)
  end
end

function Model:setOrigin(x, y)
  Model.super.setOrigin(self, x, y)
  ---@param sprite_set SpriteSet
  self:batchSpriteSets(function(sprite_set, _)
    sprite_set:setOrigin(self.origin:unpack())
  end)
end

function Model:setCurrentFrame(index)
  self:batchSpriteSets(function(sprite_set, _)
    sprite_set:setCurrentSprite(index)
  end)
end

return Model
