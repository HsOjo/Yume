---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hsojo.
--- DateTime: 2022/11/19 19:38
---

local Mouse = require('sys.core.input.mouse')

---@class Drag: BaseObject
local Drag = require('sys.core.base.object'):extend()

---@param object BaseDrawable
function Drag:new(object)
  self.object = object

  ---@type BaseShape[]
  self.shapes = {}
  ---@type Point
  self.start_position = nil
  ---@type Point
  self.mouse_start_position = nil
  self.is_dragging = false
end

---@param shape BaseShape
function Drag:addShape(shape)
  table.insert(self.shapes, shape)
  return shape
end

function Drag:restorePosition()
  if self.start_position then
    self.object:setPosition(self.start_position:unpack())
  end
end

function Drag:update()
  if not self.is_dragging then
    if Mouse.key(Mouse.KEY_L):isDown() then
      for _, shape in pairs(self.shapes) do
        if shape:testPoint(Mouse.position()) then
          self.start_position = self.object.position
          self.mouse_start_position = Mouse.position()
          self.is_dragging = true
          break
        end
      end
    end
  else
    self.object:setPosition(
      self.start_position:offset(
        Mouse.position():offset(
          self.mouse_start_position:reverse()
        )):unpack()
    )
    if Mouse.key(Mouse.KEY_L):isUp() then
      self.is_dragging = false
    end
  end
end

return Drag
