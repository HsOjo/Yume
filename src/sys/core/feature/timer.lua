---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hsojo.
--- DateTime: 2022/11/20 11:31
---

local Event = require('sys.core.feature.event')

---@class Timer: Updatable
---@field super Updatable
local Timer = require('sys.core.base.updatable'):extend()
Timer.__name = 'Timer'
Timer.COUNT_INFINITY = -1

Timer.EVENT_TIMEOUT = 1
Timer.EVENT_UPDATE = 2
Timer.EVENT_FINISHED = 3

---@param callback function
function Timer:new(callback, timeout, count)
  Timer.super.new(self)
  self.event = Event()
  self.event:on(Timer.EVENT_TIMEOUT, callback)

  self.timeout = timeout
  self.count = count or 1

  self.elapsed_time = 0
  self.finished_count = 0
  self.is_started = false
end

function Timer:start()
  self.is_started = true
  return self
end

function Timer:pause()
  self.is_started = false
  return self
end

function Timer:reset()
  self.is_started = false
  self.elapsed_time = 0
  self.finished_count = 0
  return self
end

function Timer:isFinished()
  return self.finished_count >= self.count and self.count ~= Timer.COUNT_INFINITY
end

function Timer:update(dt)
  Timer.super.update(self, dt)
  if self.is_started and not self:isFinished() then
    if self.elapsed_time < self.timeout then
      self.elapsed_time = self.elapsed_time + dt
      self.event:emit(Timer.EVENT_UPDATE, self.elapsed_time, self.timeout)
    else
      self.elapsed_time = 0
      self.finished_count = self.finished_count + 1

      self.event:emit(Timer.EVENT_TIMEOUT, self.count, self.finished_count)
      if self:isFinished() then
        self.event:emit(Timer.EVENT_FINISHED)
      end
    end
  end
end

function Timer:release()
  Timer.super.release(self)
  self.event:release()
end

return Timer
