---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hsojo.
--- DateTime: 2022/12/6 22:36
---

local Updatable = require('sys.core.base.updatable')
local Drawable = require('sys.core.base.drawable')
local BorderEffect = require('sys.core.effect.border')

---@class Indicator: DynamicText
local Indicator = require('sys.core.drawable.dynamic_text'):extend()

function Indicator:new()
  Indicator.super.new(self, love.graphics.getFont())
  self:setFreeze(false)

  self:setPosition(8, 8)
  self:applyEffect(BorderEffect(1))
end

function Indicator:update(dt)
  self:setText('')
  self:appendObject(string.format(
    'Window: %s, %s (DPI Scale: %s)',
    love.graphics.getWidth(), love.graphics.getHeight(), love.graphics.getDPIScale()
  ))
  self:appendObject(string.format(
    'FPS: %s Uptime: %s\nDeltaTime: %s',
    love.timer.getFPS(), math.floor(love.timer.getTime(), 2), love.timer.getAverageDelta()
  ))
  self:appendObject(string.format(
    'Objects Total: %s Updatable: %s Drawable: %s',
    self.parent:countChildren(),
    self.parent:countChildren(Updatable, function(object)
      return not object.freeze
    end),
    self.parent:countChildren(Drawable, function(object)
      return object.visible
    end)
  ))
end

function Indicator:appendObject(obj)
  local content = tostring(obj)
  if self.text ~= '' then
    content = string.format('%s\n%s', self.text, content)
  end
  self:setText(content)
end

return Indicator
